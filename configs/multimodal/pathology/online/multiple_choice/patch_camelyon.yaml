trainer:
  class_path: eva.Trainer
  init_args:
    accelerator: ${oc.env:ACCELERATOR, auto}
    devices: ${oc.env:NUM_DEVICES, 1}
    n_runs: &N_RUNS ${oc.env:N_RUNS, 2}
    default_root_dir: ${oc.env:OUTPUT_ROOT, logs/${oc.env:MODEL_NAME, anthropic-claude-3-7-sonnet-latest}/pubmedqa}
    precision: bf16
    checkpoint_type: null
    callbacks:
      - class_path: eva.callbacks.ConfigurationLogger
model:
  class_path: eva.multimodal.models.modules.VisionLanguageModule
  init_args:
    model:
      class_path: eva.multimodal.models.wrappers.ModelFromRegistry
      init_args:
        model_name: ${oc.env:MODEL_NAME, anthropic/claude-3-7-sonnet-20250219}
        model_extra_kwargs: ${oc.env:MODEL_EXTRA_KWARGS, null}
    metrics:
      common:
        - class_path: eva.metrics.MulticlassClassificationMetrics
          init_args:
            num_classes: 3
            input_type: "discrete"
    postprocess:
      predictions_transforms:
        - class_path: eva.language.models.postprocess.ExtractDiscreteAnswerFromJson
          init_args:
            mapping: {"no": 0, "yes": 1, "missing_answer": 2}
            missing_limit: 5
            missing_response: 2
data:
  class_path: eva.DataModule
  init_args:
    datasets:
      val:
        class_path: eva.multimodal.data.datasets.PatchCamelyon
        init_args: &DATASET_ARGS
          root: ${oc.env:DATA_ROOT, /mnt/localdisk/data/patch_camelyon}
          split: val
          download: ${oc.env:DOWNLOAD_DATA, false}
          # Set `download: true` to download the dataset from https://zenodo.org/records/1494286
          # The PatchCamelyon dataset is distributed under the following license: 
          # "Creative Commons Zero v1.0 Universal"
          # (see: https://choosealicense.com/licenses/cc0-1.0/)
          transforms:
            image:
              class_path: eva.vision.data.transforms.Resize
              init_args:
                size: ${oc.env:RESIZE_DIM, null}
                max_bytes: ${oc.env:IMAGE_MAX_BYTES, null}
      test:
        class_path: eva.multimodal.data.datasets.PatchCamelyon
        init_args:
          <<: *DATASET_ARGS
          split: test
    dataloaders:
      val: &DATALOADER_ARGS
        batch_size: &BATCH_SIZE ${oc.env:BATCH_SIZE, 16}
        num_workers: &N_DATA_WORKERS ${oc.env:N_DATA_WORKERS, 1}
        collate_fn: eva.multimodal.data.dataloaders.text_image_collate
      test:
        <<: *DATALOADER_ARGS
    samplers:
      val: &SAMPLER_ARGS
        class_path: eva.core.data.samplers.BalancedSampler
        init_args:
          seed: ${oc.env:SAMPLER_SEED, 42}
          num_samples: ${oc.env:NUM_SAMPLES, 250}
      test:
        <<: *SAMPLER_ARGS

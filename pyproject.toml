[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "kaiko-eva"
version = "0.0.0.dev3"
description = "Evaluation Framework for oncology foundation models."
readme = "README.md"
authors = [
    { name = "Ioannis Gatopoulos", email = "ioannis@kaiko.ai" },
    { name = "Nicolas Känzig", email = "nicolas@kaiko.ai" },
    { name = "Roman Moser", email = "roman@kaiko.ai" },
]
maintainers = [
    { name = "Ioannis Gatopoulos", email = "ioannis@kaiko.ai" },
    { name = "Nicolas Känzig", email = "nicolas@kaiko.ai" },
    { name = "Roman Moser", email = "roman@kaiko.ai" },
]
requires-python = ">=3.10"
dependencies = [
    "pytorch-lightning>=2.1.4",
    "loguru>=0.7.2",
    "jsonargparse[omegaconf]>=4.27.4",
    "pandas>=2.2.0",
    "pyarrow>=15.0.0",
    "nibabel>=5.2.0",
    "timm>=0.9.12",
    "tensorboard>=2.16.2",
    "transformers>=4.38.2",
    "onnxruntime>=1.17.1",
    "onnx>=1.15.0",
    "toolz>=0.12.1",
]

[project.license]
file = "LICENSE"

[project.optional-dependencies]
vision = [
    "torchvision>=0.17.0",
    "opencv-python-headless>=4.9.0.80",
    "h5py>=3.10.0",
]
all = [
    "torchvision>=0.17.0",
    "opencv-python-headless>=4.9.0.80",
    "h5py>=3.10.0",
]

[project.scripts]
eva = "eva.__main__:main"
kaiko-eva = "eva.__main__:main"

[tool.pdm.build]
package-dir = "src"
includes = [
    "src/eva",
]

[tool.pdm.scripts]
bump = "nox -s bump"

[tool.pdm.dev-dependencies]
lint = [
    "isort>=5.12.0",
    "black>=23.1.0",
    "ruff>=0.0.254",
    "yamllint>=1.29.0",
    "nox>=2022.11.21",
    "bandit>=1.7.6",
    "pyright>=1.1.295",
]
typecheck = [
    "pyright>=1.1.295",
    "pytest>=7.2.2",
]
test = [
    "pygments>=2.14.0",
    "pytest>=7.2.2",
    "nox>=2022.11.21",
    "pytest-cov>=4.1.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-material>=9.5.6",
]
dev = [
    "isort>=5.12.0",
    "black>=23.1.0",
    "ruff>=0.0.254",
    "yamllint>=1.29.0",
    "nox>=2022.11.21",
    "bandit>=1.7.6",
    "pyright>=1.1.295",
    "pygments>=2.14.0",
    "pytest>=7.2.2",
    "nox>=2022.11.21",
    "pytest-cov>=4.1.0",
    "mkdocs>=1.5.3",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-material>=9.5.6",
]

[tool.isort]
atomic = true
profile = "black"
line_length = 100
skip_gitignore = true

[tool.black]
target-version = [
    "py310",
]
line-length = 100

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
]
ignore = [
    "D401",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.bandit]
exclude_dirs = [
    ".venv",
    "tests/**",
]

[tool.pyright]
pythonVersion = "3.10"
reportIncompatibleMethodOverride = false
exclude = [
    "__pypackages__",
    ".nox",
]

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--durations=0",
    "--strict-markers",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
markers = [
    "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage]
precision = 2
range = [
    95,
    100,
]

[tool.coverage.run]
omit = [
    "__pypackages__/*",
    "/private/*",
]

[tool.coverage.comment]
layout = "header, diff, flags, files, footer"
